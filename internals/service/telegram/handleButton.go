package telegram

import (
	"fmt"
	"log/slog"
	"strconv"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –≤ handleUpdates –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
// button - –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
func (b *Telegram) handleButton(update *tgbotapi.Update, button string, id int64) {
	switch button {
	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã
	case "delete":
		err := b.delete(update.CallbackQuery.Message)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –∂–∏–∑–Ω–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "add_time":
		err := b.addTime(update.CallbackQuery.Message)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–∏–∫
	case "save_old_name":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ –Ω–∏–∫–∞ —Ö–æ—Å—Ç–µ—Ä–∞",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –†–∞–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –Ω–∏–∫ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ë–î –≤ —Å—Ç–∞—Ç—É—Å–µ host_name
		old_name, err := b.rep.GetUserStatus(id, "host_name")
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ä–æ–º –Ω–∏–∫–µ —Ö–æ—Å—Ç–µ—Ä–∞",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
		}

		// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞ —Ö–æ—Å—Ç–µ—Ä–∞ –≤ —á–µ—Ä–Ω–æ–≤–∏–∫ –∫–æ–º–Ω–∞—Ç—ã, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
		// –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ addHostName –≤ —Ñ–∞–π–ª–µ add.go
		err = b.addHostName(update.CallbackQuery.Message, old_name)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞ —Ö–æ—Å—Ç–µ—Ä–∞",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err = b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}

		} else {
			// –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è addHostName –≤—ã–ø–æ–ª–Ω–∏–ª–∞—Å—å –±–µ–∑ –æ—à–∏–±–æ–∫, —Ç–æ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º
			// –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ä—Ç—É, –¥–ª—è —á–µ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
			// –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
			kb := tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üöÄ Skeld", "skeld"),
					tgbotapi.NewInlineKeyboardButtonData("‚õÑ Polus", "polus"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üçÑ Fungle", "fungle"),
					tgbotapi.NewInlineKeyboardButtonData("üõ©Ô∏è Airship", "airship"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üè¢ Mira HQ", "mira"),
					tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
				),
			)
			msg := tgbotapi.NewMessage(id,
				"–í—ã–±–µ—Ä–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç "+
					"(–Ω–µ –±–æ–ª–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):\n")
			msg.ReplyMarkup = kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "wait_mapname"
			b.rep.SaveUserStatus(id, "status", "wait_mapname")

		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "skeld":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã Skeld",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleMap(update, id, "Skeld")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "polus":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã Polus",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleMap(update, id, "Polus")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "fungle":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã Fungle",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleMap(update, id, "Fungle")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "airship":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã Airship",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleMap(update, id, "Airship")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "mira":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã Mira HQ",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleMap(update, id, "Mira HQ")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "classic":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ Classic",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		b.handleMode(update, id, "–ö–ª–∞—Å—Å–∏–∫–∞")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "hide":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ Hide and Seek",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		b.handleMode(update, id, "–ü—Ä—è—Ç–∫–∏")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
	case "mods":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ Mods",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		b.handleMode(update, id, "–ú–æ–¥—ã")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –∫–æ–º–Ω–∞—Ç—ã
	case "change_code":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –∫–æ–º–Ω–∞—Ç—ã",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "change_code", –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		// –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã
		err := b.rep.SaveUserStatus(id, "status", "edit_code")
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
		}
		msg := tgbotapi.NewMessage(id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤—ã–π –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:")
		msg.ReplyMarkup = cancel_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
	case "change_map":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "change_map", –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		// –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		err := b.rep.SaveUserStatus(id, "status", "change_map")
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
		}

		// –í—ã–≤–æ–¥–∏—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ä—Ç
		kb := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üöÄ Skeld", "change_skeld"),
				tgbotapi.NewInlineKeyboardButtonData("‚õÑ Polus", "change_polus"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üçÑ Fungle", "change_fungle"),
				tgbotapi.NewInlineKeyboardButtonData("üõ©Ô∏è Airship", "change_airship"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üè¢ Mira HQ", "change_mira"),
				tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
			),
		)
		msg := tgbotapi.NewMessage(id,
			"–í—ã–±–µ—Ä–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç "+
				"(–Ω–µ –±–æ–ª–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):\n")
		msg.ReplyMarkup = kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
	case "change_skeld":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ Skeld",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleNewMap(update, id, "Skeld")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
	case "change_polus":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ Polus",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleNewMap(update, id, "Polus")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
	case "change_fungle":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ Fungle",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleNewMap(update, id, "Fungle")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
	case "change_airship":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ Airship",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleNewMap(update, id, "Airship")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
	case "change_mira":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ Mira",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
		b.handleNewMap(update, id, "Mira HQ")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–∞ —Ö–æ—Å—Ç–µ—Ä–∞
	case "change_hoster":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–∞ —Ö–æ—Å—Ç–µ—Ä–∞",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "change_hoster", –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		// –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –Ω–∏–∫ —Ö–æ—Å—Ç–µ—Ä–∞
		err := b.rep.SaveUserStatus(id, "status", "change_hoster")
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
		}
		msg := tgbotapi.NewMessage(id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤—ã–π –Ω–∏–∫ —Ö–æ—Å—Ç–µ—Ä–∞:")
		msg.ReplyMarkup = cancel_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
	case "change_description":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "change_description", –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		// –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		err := b.rep.SaveUserStatus(id, "status", "change_description")
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
		}

		// –í—ã–≤–æ–¥–∏—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ä–µ–∂–∏–º–æ–≤
		kb := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üë®‚Äçüéì –ö–ª–∞—Å—Å–∏–∫–∞", "change_classic"),
				tgbotapi.NewInlineKeyboardButtonData("üßå –ü—Ä—è—Ç–∫–∏", "change_hide"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üõ†Ô∏è –ú–æ–¥—ã", "change_mods"),
				tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
			),
		)
		msg := tgbotapi.NewMessage(id,
			"–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –∏–≥—Ä—ã –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç "+
				"(–Ω–µ –±–æ–ª–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):\n")
		msg.ReplyMarkup = kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
	case "change_classic":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –Ω–∞ Classic",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		b.handleNewMode(update, id, "–ö–ª–∞—Å—Å–∏–∫–∞")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
	case "change_hide":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –Ω–∞ Hide and Seek",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		b.handleNewMode(update, id, "–ü—Ä—è—Ç–∫–∏")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
	case "change_mods":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –Ω–∞ Mods",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞, –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
		b.handleNewMode(update, id, "–ú–æ–¥—ã")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã
	// –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "null" (—Ç.–µ. –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥),
	// –≤—ã–≤–æ–¥–∏—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /list (—Ç.–µ. —É–¥–∞–ª—è—é—Ç—Å—è –¥—Ä—É–≥–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
	// TODO: –ø–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –∫–æ–º–Ω–∞—Ç—ã –∏–∑ –ë–î –∏ –¥—Ä—É–≥–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
	case "cancel":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "null"
		err := b.rep.SaveUserStatus(id, "status", "null")
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				slog.String("error", err.Error()))
		}
		msg := tgbotapi.NewMessage(id, "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω–µ–Ω–æ")
		msg.ReplyMarkup = list_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç
	case "roomlist":
		slog.Info("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID))

		// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç
		err := b.handleList(update.CallbackQuery.Message)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç",
				slog.String("error", err.Error()))
		}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Ç–∏–ø–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞ –≤ –∞–¥—Ä–µ—Å –µ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
	case "send_template":
		// –î–ª—è —ç—Ç–æ–≥–æ –±–µ—Ä—ë—Ç—Å—è –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã —Ö–æ—Å—Ç–µ—Ä–∞ –∏–∑ –ë–î
		room_code, err := b.rep.GetUserStatus(id, "room")

		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–º–Ω–∞—Ç–µ",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
			err = b.rep.SaveUserStatus(id, "status", "null")
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
					slog.String("error", err.Error()))
			}
			break
		}

		// –ü–æ –∫–æ–¥—É –∫–æ–º–Ω–∞—Ç—ã –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–Ω–∞—Ç–µ –∏–∑ –ë–î
		room, err := b.rep.GetRoom(room_code)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–º–Ω–∞—Ç–µ",
				slog.String("error", err.Error()))
			msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
			err = b.rep.SaveUserStatus(id, "status", "null")
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
					slog.String("error", err.Error()))
			}
			break
		}

		// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∏–ø–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
		// TODO: –ø–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —Ç–µ–º, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç —ç—Ç–æ–≥–æ –∏ –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π
		// —Ñ–∞–π–ª, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –µ–≥–æ –º–µ–Ω—è—Ç—å –±–µ–∑ –ø–µ—Ä–µ–∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ (–∏–ª–∏) –±–µ–∑ –ø—Ä–∞–≤–æ–∫
		// –≤ —Ä–∞–∑–Ω—ã—Ö –∫—É—Å–∫–∞—Ö –∫–æ–¥–∞
		post := fmt.Sprintf("_–ü—Ä–∏–≤–µ—Ç!\n–ó–∞—Ö–æ–¥–∏ –∫–æ –º–Ω–µ –ø–æ–∏–≥—Ä–∞—Ç—å, "+
			"—è –∏–≥—Ä–∞—é –Ω–∞ –∫–∞—Ä—Ç–µ %s, —Ä–µ–∂–∏–º %s, –∫–æ–¥:_\n\n`%s`", room.Map, room.Mode, room.Code)

		// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
		err = b.sendPost(update.CallbackQuery.Message, post)
		if err != nil {
			msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID,
				"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏")
			msg.ReplyMarkup = list_kb
			_, err := b.bot.Send(msg)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
					slog.String("error", err.Error()))
			}
		}
		b.rep.SaveUserStatus(update.CallbackQuery.Message.Chat.ID, "status", "null")

	// –í –∏–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –∫–æ—Ç–æ—Ä—ã –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω—ã –≤ data –∫–Ω–æ–ø–∫–∏
	default:
		// –ü–µ—Ä–≤—ã—Ö 3 —Å–∏–º–≤–æ–ª–∞ –∫–æ–¥–∏—Ä—É—é—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—É –∫–æ–º–∞–Ω–¥—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
		cmd := string([]rune(button)[0:3])
		slog.Info("–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏",
			slog.String("user", update.CallbackQuery.Message.Chat.UserName),
			slog.Int64("id", update.CallbackQuery.Message.Chat.ID),
			slog.String("cmd", cmd))
		switch cmd {
		// –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ö–æ—Å—Ç–µ—Ä–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä - ID —Ö–æ—Å—Ç–µ—Ä–∞
		case "sub":
			userID := update.CallbackQuery.Message.Chat.ID
			hostID_str := string([]rune(button)[3:])
			hostID, err := strconv.ParseInt(hostID_str, 10, 64)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ID —Ö–æ—Å—Ç–∞",
					slog.String("error", err.Error()))
				return
			}

			// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ö–æ—Å—Ç–µ—Ä–∞
			err = b.subscribe(update.CallbackQuery, userID, hostID)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏",
					slog.String("error", err.Error()))
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID,
					"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ö–æ—Å—Ç–µ—Ä–∞")
				msg.ReplyMarkup = list_kb
				_, err := b.bot.Send(msg)
				if err != nil {
					slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
						slog.String("error", err.Error()))
				}
			}

		// Are you shure? - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞
		case "ays":
			userID := update.CallbackQuery.Message.Chat.ID
			hostID_str := string([]rune(button)[3:])
			hostID, err := strconv.ParseInt(hostID_str, 10, 64)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ID —Ö–æ—Å—Ç–∞",
					slog.String("error", err.Error()))
				return
			}

			// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è
			// –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∏–ª–∏ –æ—Ç–º–µ–Ω–æ–π –æ—Ç–ø–∏—Å–∫–∏
			err = b.areYouShure(userID, hostID)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã",
					slog.String("error", err.Error()))
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID,
					"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞")
				msg.ReplyMarkup = list_kb
				_, err := b.bot.Send(msg)
				if err != nil {
					slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
						slog.String("error", err.Error()))
				}
			}

		// –û—Ç–º–µ–Ω–∞ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞
		case "uns":
			userID := update.CallbackQuery.Message.Chat.ID
			hostID_str := string([]rune(button)[3:])
			hostID, err := strconv.ParseInt(hostID_str, 10, 64)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ID —Ö–æ—Å—Ç–∞",
					slog.String("error", err.Error()))
				return
			}

			// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞
			// –£—á–∏—Ç—ã–≤–∞—è —á—Ç–æ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∫–æ–º–∞–Ω–¥—ã —É–∫–∞–∑–∞–Ω ID —Ö–æ—Å—Ç–µ—Ä–∞, —Ç–æ –¥–ª—è –≤—ã–≤–æ–¥–∞
			// —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø–∏—Å–∫–µ –æ—Ç —Ö–æ—Å—Ç–µ—Ä–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–∏–∫–∞ —Ö–æ—Å—Ç–µ—Ä–∞
			// –∫–æ–º–∞–Ω–¥–∞ –≤–µ—Ä–Ω–µ—Ç –Ω–∏–∫ —Ö–æ—Å—Ç–µ—Ä–∞, –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç
			// –≤—ã–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			txt, err := b.unsubscribe(userID, hostID)
			if err != nil {
				slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø–∏—Å–∫–∏",
					slog.String("error", err.Error()))
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, txt)
				msg.ReplyMarkup = list_kb
				_, err := b.bot.Send(msg)
				if err != nil {
					slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
						slog.String("error", err.Error()))
				}
			} else {
				msg_text := fmt.Sprintf("–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –æ—Ç–ø–∏—Å–∫–∞ –æ—Ç %s\n\n"+
					"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–∏—Ö —Ö–æ—Å—Ç–æ–≤ –∂–º–∏ /subscribe\n"+
					"–î–ª—è –æ—Ç–ø–∏—Å–∫–∏ –∂–º–∏ /unsubscribe", txt)
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, msg_text)
				msg.ReplyMarkup = list_kb
				_, err := b.bot.Send(msg)
				if err != nil {
					slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
						slog.String("error", err.Error()))
				}
			}
		}
	}
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
func (b *Telegram) handleMap(update *tgbotapi.Update, id int64, mapa string) {
	err := b.addMapName(update.CallbackQuery.Message, mapa)
	if err != nil {
		slog.Error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã",
			slog.String("error", err.Error()))
		msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
		msg.ReplyMarkup = list_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
	} else {
		// –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ, —Ç–æ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º —è–≤–ª—è–µ—Ç—Å—è
		// –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã, –ø–æ—ç—Ç–æ–º—É –≤—ã–≤–æ–¥–∏—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ä–µ–∂–∏–º–∞–º–∏ –∏–≥—Ä—ã
		kb := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üë®‚Äçüéì –ö–ª–∞—Å—Å–∏–∫–∞", "classic"),
				tgbotapi.NewInlineKeyboardButtonData("üßå –ü—Ä—è—Ç–∫–∏", "hide"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üõ†Ô∏è –ú–æ–¥—ã", "mods"),
				tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
			),
		)
		msg := tgbotapi.NewMessage(id,
			"–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –∏–≥—Ä—ã –∏–ª–∏ –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç "+
				"(–Ω–µ –±–æ–ª–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):\n")
		msg.ReplyMarkup = kb
		_, err := b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "wait_gamemode"
		b.rep.SaveUserStatus(id, "status", "wait_gamemode")
	}
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
func (b *Telegram) handleMode(update *tgbotapi.Update, id int64, mode string) {
	err := b.addGameMode(update.CallbackQuery.Message, mode)
	if err != nil {
		slog.Error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã",
			slog.String("error", err.Error()))
		msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
		msg.ReplyMarkup = list_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
	} else {
		// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –±—ã–ª–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º —à–∞–≥–æ–º, –ø–æ—ç—Ç–æ—Å—É –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
		// –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç, —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω—É–ª—è–µ—Ç—Å—è
		msg := tgbotapi.NewMessage(id, "*–ö–æ–º–Ω–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞*\n\n"+
			"–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –±–æ—Ç–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏, "+
			"–Ω–µ –∑–∞–±—É–¥—å –µ—ë —É–¥–∞–ª–∏—Ç—å –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å –∏–≥—Ä–∞—Ç—å")
		msg.ReplyMarkup = list_kb
		msg.ParseMode = "markdownV2"
		_, err := b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
		b.rep.SaveUserStatus(id, "status", "null")
	}
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
func (b *Telegram) handleNewMap(update *tgbotapi.Update, id int64, mapa string) {
	err := b.changeMap(update.CallbackQuery.Message, mapa)
	if err != nil {
		slog.Error("–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É",
			slog.String("error", err.Error()))
		msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
		msg.ReplyMarkup = list_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
	} else {
		msg := tgbotapi.NewMessage(id,
			"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ")
		msg.ReplyMarkup = list_kb
		_, err := b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
		b.rep.SaveUserStatus(id, "status", "null")
	}
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
func (b *Telegram) handleNewMode(update *tgbotapi.Update, id int64, mode string) {
	err := b.changeDescription(update.CallbackQuery.Message, mode)
	if err != nil {
		slog.Error("–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É",
			slog.String("error", err.Error()))
		msg := tgbotapi.NewMessage(id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
		msg.ReplyMarkup = list_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
	} else {
		msg := tgbotapi.NewMessage(id,
			"–†–µ–∂–∏–º –∏–≥—Ä—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω")
		msg.ReplyMarkup = list_kb
		_, err := b.bot.Send(msg)
		if err != nil {
			slog.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
				slog.String("error", err.Error()))
		}
		b.rep.SaveUserStatus(id, "status", "null")
	}
}

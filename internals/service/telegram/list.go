package telegram

import (
	"fmt"
	"log/slog"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func (b *Telegram) handleList(message *tgbotapi.Message) error {
	const path = "service.telegram.list"

	_, err := b.rep.GetRoomList()
	if err != nil {
		slog.Error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç –∏–∑ –ë–î")
		return fmt.Errorf("%s: %w", path, err)
	}

	rooms := map[string][]string{
		"AAAAAA": {"Skeld", "–•–æ—Å—Ç 1", "–ö–ª–∞—Å—Å–∏–∫–∞"},
		"BCVQQQ": {"–í—Å–µ", "–º–ª–∞–¥—à–µ 10", "–ø—Ä—è—Ç–∫–∏"},
		"NBVFFF": {"Polus", "—Å—Ç–∞—Ä—à–µ 60", "–¥—É—à–Ω–∏–ª–æ–≤–æ"},
	}

	msgText := "*–†—É–º—ã, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å:*\n\n"
	i := 1
	indent := ""
	for code, room := range rooms {
		indent = strings.Repeat(" ", 9)
		msgText += fmt.Sprintf("`%s`    ‚ï≠  üöÄ  %-10s\n", indent, room[0])
		msgText += fmt.Sprintf("*%d\\. *`%-6s`       \\-   üëë   *%-10s*\n", i, code, room[1])
		msgText += fmt.Sprintf("`%s`    ‚ï∞  üé≤  %-10s\n\n", indent, room[2])
		i++
	}

	msgText += "\n"
	msgText += "||–ï—Å–ª–∏ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, —Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é üòä||"

	msg := tgbotapi.NewMessage(message.Chat.ID, msgText)
	msg.ParseMode = "MarkdownV2"

	_, err = b.bot.Send(msg)
	if err != nil {
		slog.Error("error send message to user")
		return fmt.Errorf("%s: %w", path, err)
	}

	slog.Info("–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ list")
	return nil
}

package telegram

import (
	"among-us-roombot/internals/models"
	"fmt"
	"log/slog"
	"sort"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func (b *Telegram) handleList(message *tgbotapi.Message) error {
	const path = "service.telegram.list"
	var rooms models.RoomList

	rooms, err := b.rep.GetRoomList()
	if err != nil {
		slog.Error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç –∏–∑ –ë–î")
		return fmt.Errorf("%s: %w", path, err)
	}

	sort.Sort(rooms)

	msgText := "*–†—É–º—ã, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å:*\n\n"

	if len(rooms) == 0 {
		msgText = "–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Ä—É–º—ã üòî\n–°–æ–∑–¥–∞–π —Å–≤–æ—é –∫–æ–º–∞–Ω–¥–æ–π /add"
		msg := tgbotapi.NewMessage(message.Chat.ID, msgText)
		msg.ParseMode = "MarkdownV2"
		msg.ReplyMarkup = list_kb
		_, err = b.bot.Send(msg)
		if err != nil {
			slog.Error("error send message to user")
			return fmt.Errorf("%s: %w", path, err)
		}
		slog.Info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç",
			slog.String("user", message.Chat.UserName),
			slog.Int64("id", message.Chat.ID))

		return nil
	}

	i := 1
	indent := ""
	var emoji_map, emoji_mode string
	for _, room := range rooms {
		switch room.Map {
		case "Skeld":
			emoji_map = "üöÄ "
		case "Polus":
			emoji_map = "‚õÑ "
		case "Airship":
			emoji_map = "üõ©Ô∏è "
		case "Mira HQ":
			emoji_map = "üè¢ "
		case "Fungle":
			emoji_map = "üçÑ "
		default:
			emoji_map = "üöÄ "
		}

		switch room.Mode {
		case "–ö–ª–∞—Å—Å–∏–∫–∞":
			emoji_mode = "üë®‚Äçüéì "
		case "–ü—Ä—è—Ç–∫–∏":
			emoji_mode = "üßå "
		case "–ú–æ–¥—ã":
			emoji_mode = "üõ†Ô∏è "
		default:
			emoji_mode = "üé≤ "
		}

		indent = strings.Repeat(" ", 9)
		msgText += fmt.Sprintf("`%s`    ‚ï≠  %s %-10s\n", indent, emoji_map, room.Map)
		msgText += fmt.Sprintf("*%d\\. *`%-6s`       \\-   üëë   *%-10s*\n", i, room.Code, room.Hoster)
		msgText += fmt.Sprintf("`%s`    ‚ï∞  %s %-10s\n\n", indent, emoji_mode, room.Mode)
		i++
	}

	msgText += "\n"
	msgText += "||–ï—Å–ª–∏ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, —Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é üòä||"

	msg := tgbotapi.NewMessage(message.Chat.ID, msgText)
	msg.ReplyMarkup = list_kb
	msg.ParseMode = "MarkdownV2"

	_, err = b.bot.Send(msg)
	if err != nil {
		slog.Error("error send message to user")
		return fmt.Errorf("%s: %w", path, err)
	}

	slog.Info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç",
		slog.String("user", message.Chat.UserName),
		slog.Int64("id", message.Chat.ID))
	return nil
}
